@inject IJSRuntime JSRuntime
@implements IDialogContentComponent

<FluentDesignTheme @bind-Mode="@themeMode" StorageName="theme"/>

<FluentDialogBody Style="overflow-x:hidden">
    <FluentGrid>
        <FluentGridItem>
            <FluentSelect Label="Theme" TOption="DesignThemeModes" Items="@(Enum.GetValues<DesignThemeModes>())"
                          SelectedOption="@themeMode" SelectedOptionChanged="@OnThemeChange"/>
        </FluentGridItem>


    </FluentGrid>
</FluentDialogBody>

<FluentDialogFooter>
    <FluentButton Appearance="Appearance.Stealth" OnClick="@SaveAsync">Ok</FluentButton>
</FluentDialogFooter>

@code
{
    [CascadingParameter] public DesignThemeModes themeMode { get; set; }

    [CascadingParameter] public FluentDialog Dialog { get; set; } = default!;


    private void OnThemeChange(DesignThemeModes selectedMode)
    {
        themeMode = selectedMode;
    }

    private async Task SaveAsync()
    {
        await Dialog.CloseAsync();
    }

    private async Task CancelAsync()
    {
        await Dialog.CancelAsync();
    }
}